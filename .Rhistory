rmarkdown::render_site()
rmarkdown::render_site()
setwd("C:/Users/Sungkyu Jung/Dropbox/1Research/COVID-19/Benford's Law")
N <- read.csv("COVID-19-master-git/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv", header = T)
D <- read.csv("COVID-19-master-git/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv", header = T)
C <- read.csv("COVID-19-master-git/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv", header = T)
N$Country.Region == "China"
sum(N$Country.Region == "China")
NChina <- N[N$Country.Region == "China",]
View(NChina)
DChina <- D[D$Country.Region == "China",]
View(DChina)
CChina <- C[C$Country.Region == "China",]
View(CChina)
library(tidyverse)
View(CChina)
# 1. Pivot data
dim(N)
# 1. Pivot data
data_size <- dim(N)
data_size(2)
data_size[2]
Np <- pivot_longer(N, 5:data_size[2])
View(Np)
Np <- pivot_longer(N, 5:data_size[2], names_to = "date"  )
Np %>% mutate(date = as.Date(date))
Np %>% mutate(date = as.Date(str_remove(date,"X"))
)
attach(Np)
str_remove(date,"X")
Np %>% mutate(date = as.Date(str_remove(date,"X"), tryFormats = "%m.%d.%y"))
Np <- pivot_longer(N, 5:data_size[2], names_to = "date"  ) %>%
mutate(date = as.Date(str_remove(date,"X"), tryFormats = "%m.%d.%y"))
M <- Np %>% inner_join(Cp, by = c("Province.State","Country.Region","date"))
Cp <- pivot_longer(C, 5:data_size[2], names_to = "date"  ) %>%
mutate(date = as.Date(str_remove(date,"X"), tryFormats = "%m.%d.%y"))
Dp <- pivot_longer(D, 5:data_size[2], names_to = "date"  ) %>%
mutate(date = as.Date(str_remove(date,"X"), tryFormats = "%m.%d.%y"))
M <- Np %>% inner_join(Cp, by = c("Province.State","Country.Region","date"))
# 1. Pivot data
data_size <- dim(N)
Np <- pivot_longer(N, 5:data_size[2], names_to = "date"  ) %>%
mutate(date = as.Date(str_remove(date,"X"), tryFormats = "%m.%d.%y")) %>%
mutate(N = value) %>% select(-value)
Cp <- pivot_longer(C, 5:data_size[2], names_to = "date"  ) %>%
mutate(date = as.Date(str_remove(date,"X"), tryFormats = "%m.%d.%y")) %>%
mutate(C = value) %>% select(-value,-Lat,-Long)
Dp <- pivot_longer(D, 5:data_size[2], names_to = "date"  ) %>%
mutate(date = as.Date(str_remove(date,"X"), tryFormats = "%m.%d.%y")) %>%
mutate(D = value) %>% select(-value,-Lat,-Long)
M <- Np %>% inner_join(Cp, by = c("Province.State","Country.Region","date"))
M %>% filter(Country.Region == "China")
M <- Np %>%
inner_join(Cp, by = c("Province.State","Country.Region","date")) %>%
inner_join(Dp, by = c("Province.State","Country.Region","date"))
M_China <- M %>% filter(Country.Region == "China")
M_China %>% ggplot(aes(x = date, y = N)) + geom_line()
M_China_total %>% group_by(date) %>% summarize(N = sum(N), C = sum(C), D = sum(D))
M_China_total <- M_China %>% group_by(date) %>% summarize(N = sum(N), C = sum(C), D = sum(D))
View(M_China_total)
M_China_total %>% ggplot(aes(x = date, y = N)) + geom_line()
M_China_total %>% pivot_longer(2:4, names_to = "Cases", values_to = "Counts") %>%
ggplot(aes(x = date, y = Counts, color = Cases)) + geom_line()
install.packages("benford.analysis")
bfd.cp <- benford(M_China_total$N)
library(benford.analysis)
bfd.cp <- benford(M_China_total$N)
plot(bfd.cp)
bfd.cp
M_China %>% diff.Date()
diff(M_China$N)
View(M)
MM <- M_China %>% group_by(Country.Region, Province.State) %>% mutate(Nd = diff(N), Cd = diff(C), Dd = diff(D))
diff(c(0,2,3,4))
MM <- M_China %>% group_by(Country.Region, Province.State) %>% mutate(Nd = c(N[1],diff(N)))
View(MM)
M <- Np %>%
inner_join(Cp, by = c("Province.State","Country.Region","date")) %>%
inner_join(Dp, by = c("Province.State","Country.Region","date")) %>%
group_by(Country.Region, Province.State) %>%
mutate(Nd = c(N[1],diff(N)),
Cd = c(C[1],diff(C)),
Dd = c(D[1],diff(D)))
# 2. Filtering China
M_China <- M %>% filter(Country.Region == "China")
M_China_total <- M_China %>% group_by(date) %>% summarize(N = sum(N), C = sum(C), D = sum(D))
M_China_total %>% pivot_longer(2:4, names_to = "Cases", values_to = "Counts") %>%
ggplot(aes(x = date, y = Counts, color = Cases)) + geom_line()
# 2. Filtering China
M_China <- M %>% filter(Country.Region == "China")
M_China_total <- M_China %>% group_by(date) %>% summarize(N = sum(N), C = sum(C), D = sum(D))
M_China_total %>% pivot_longer(2:4, names_to = "Cases", values_to = "Counts") %>%
ggplot(aes(x = date, y = Counts, color = Cases)) + geom_line()
M_China_total <- M_China %>%
group_by(date) %>%
summarize(N = sum(N), C = sum(C), D = sum(D),
Nd = sum(Nd), Cd = sum(Cd), Dd = sum(Dd))
M_China_total %>% pivot_longer(2:4, names_to = "Cases", values_to = "Counts") %>%
ggplot(aes(x = date, y = Counts, color = Cases)) + geom_line()
M_China_total %>% pivot_longer(5:7, names_to = "Cases", values_to = "Counts") %>%
ggplot(aes(x = date, y = Counts, color = Cases)) + geom_line()
bfd.cp <- benford(M_China_total$Nd)
plot(bfd.cp)
bfd.cp
bfd.cp <- benford(M_China_total$Cd)
plot(bfd.cp)
bfd.cp
Ch_n <- benford(M_China_total$Nd)
Ch_n
Ch_n <- benford(M_China_total$Nd, number.of.digits = 1)
Ch_n
plot(Ch_n)
Ch_n
Ch_c <- benford(M_China_total$Cd, number.of.digits = 1)
plot(Ch_c)
Ch_c
View(M_China)
# State separately
M_China %>% %>% pivot_longer(2:4, names_to = "Cases", values_to = "Counts") %>%
ggplot(aes(x = date, y = Counts, color = Cases)) + geom_line()
# State separately
M_China %>% pivot_longer(2:4, names_to = "Cases", values_to = "Counts") %>%
ggplot(aes(x = date, y = Counts, color = Cases)) + geom_line()
# State separately
M_China %>% select(-Lat, -Long) %>% pivot_longer(2:4, names_to = "Cases", values_to = "Counts") %>%
ggplot(aes(x = date, y = Counts, color = Cases)) + geom_line()
M_China %>% select(-Lat, -Long)
# State separately
M_China %>% select(-Lat, -Long) %>% pivot_longer(4:6, names_to = "Cases", values_to = "Counts") %>%
ggplot(aes(x = date, y = Counts, color = Cases)) + geom_line()
# State separately
M_China %>% select(-Lat, -Long) %>% pivot_longer(4:6, names_to = "Cases", values_to = "Counts") %>%
ggplot(aes(x = date, y = Counts, color = Cases)) + geom_bar()
# State separately
M_China %>% select(-Lat, -Long) %>% pivot_longer(4:6, names_to = "Cases", values_to = "Counts") %>%
ggplot(aes(x = date, y = Counts, color = Cases)) + geom_col()
# State separately
M_China %>% select(-Lat, -Long) %>% pivot_longer(4:6, names_to = "Cases", values_to = "Counts") %>%
ggplot(aes(x = date, y = Counts, color = Cases)) + geom_point()
M_China %>% select(-Lat, -Long) %>% pivot_longer(7:9, names_to = "Cases", values_to = "Counts") %>%
ggplot(aes(x = date, y = Counts, color = Cases)) + geom_line()
Ch_n <- benford(M_China$N, number.of.digits = 1)
plot(Ch_n)
Ch_n
Ch_n <- benford(M_China$Nd, number.of.digits = 1)
plot(Ch_n)
Ch_n
# 2. Filtering a country
M_country <- M %>% filter(Country.Region == "China")
# 2.1 Total
M_country_total <- M_country %>%
group_by(date) %>%
summarize(N = sum(N), C = sum(C), D = sum(D),
Nd = sum(Nd), Cd = sum(Cd), Dd = sum(Dd))
M_country_total %>% pivot_longer(2:4, names_to = "Cases", values_to = "Counts") %>%
ggplot(aes(x = date, y = Counts, color = Cases)) + geom_line()
M_country_total %>% pivot_longer(5:7, names_to = "Cases", values_to = "Counts") %>%
ggplot(aes(x = date, y = Counts, color = Cases)) + geom_line()
library(benford.analysis)
Ch_n <- benford(M_country_total$Nd, number.of.digits = 1)
plot(Ch_n)
Ch_n
Ch_c <- benford(M_country_total$Cd, number.of.digits = 1)
plot(Ch_c)
Ch_c
summary(Ch_n)
Ch_n$stats$chisq
benford(M_country_total$Nd, number.of.digits = 1)$stats$chisq
benford(M_country_total$Nd, number.of.digits = 2)$stats$chisq
benford(M_country_total$Dd, number.of.digits = 2)$stats$chisq
benford(M_country_total$Dd, number.of.digits = 1)$stats$chisq
benford(M_country_total$Cd, number.of.digits = 1)$stats$chisq
benford(M_country_total$N, number.of.digits = 2)$stats$chisq
benford(M_country_total$C, number.of.digits = 1)$stats$chisq
benford(M_country_total$D, number.of.digits = 1)$stats$chisq
benford(M_country$Nd, number.of.digits = 2)$stats$chisq
benford(M_country$Cd, number.of.digits = 1)$stats$chisq
benford(M_country$Dd, number.of.digits = 1)$stats$chisq
benford(M_country$N, number.of.digits = 1)$stats$chisq
benford(M_country$C, number.of.digits = 1)$stats$chisq
benford(M_country$D, number.of.digits = 1)$stats$chisq
hist(M_country$Nd)
hist(log10(M_country$Nd))
hist(log10(M_country$Cd))
hist(log10(M_country_total$Cd))
hist(log10(M_country_total$Nd))
hist(log10(M_country$Nd))
benford(M_country_total$N, number.of.digits = 1)$stats$chisq
benford(M_country_total$Nd, number.of.digits = 2)$stats$chisq
benford(M_country_total$Cd, number.of.digits = 1)$stats$chisq
benford(M_country_total$Dd, number.of.digits = 1)$stats$chisq
benford(M_country_total$N, number.of.digits = 1)$stats$chisq
benford(M_country_total$C, number.of.digits = 1)$stats$chisq
benford(M_country_total$D, number.of.digits = 1)$stats$chisq
hist(log10(M_country_total$Nd))
hist(log10(M_country_total$N))
hist(log10(M_country_total$Nd))
M_country %>% filter(Province.State == "Hubei")
M_now <- M_country %>% filter(Province.State == "Hubei")
hist(log10(M_now$Nd))
benford(M_now$Nd, number.of.digits = 1)$stats$chisq
benford(M_now$Cd, number.of.digits = 1)$stats$chisq
benford(M_now$Dd, number.of.digits = 1)$stats$chisq
benford(M_now$N, number.of.digits = 1)$stats$chisq
benford(M_now$C, number.of.digits = 1)$stats$chisq
benford(M_now$D, number.of.digits = 1)$stats$chisq
benford(M_now$Nd, number.of.digits = 1)$stats$chisq
benford(M_now$Cd, number.of.digits = 1)$stats$chisq
benford(M_now$Dd, number.of.digits = 1)$stats$chisq
benford(M_now$N, number.of.digits = 1)$stats$chisq
benford(M_now$C, number.of.digits = 1)$stats$chisq
benford(M_now$D, number.of.digits = 1)$stats$chisq
# example
data(census.2009) #gets data
c2009 <- benford(census.2009$pop.2009)
plot(c2009)
c2009$stats$chisq
c2009 <- benford(census.2009$pop.2009, number.of.digits = 1)
plot(c2009)
c2009$stats$chisq
View(C)
# 2. Filtering a country
M_country <- M %>% filter(Country.Region == "Korea, South")
# 2.1 Total
M_country_total <- M_country %>%
group_by(date) %>%
summarize(N = sum(N), C = sum(C), D = sum(D),
Nd = sum(Nd), Cd = sum(Cd), Dd = sum(Dd))
M_country_total %>% pivot_longer(2:4, names_to = "Cases", values_to = "Counts") %>%
ggplot(aes(x = date, y = Counts, color = Cases)) + geom_line()
M_country_total %>% pivot_longer(5:7, names_to = "Cases", values_to = "Counts") %>%
ggplot(aes(x = date, y = Counts, color = Cases)) + geom_line()
Ch_n <- benford(M_country_total$Nd, number.of.digits = 1)
Ch_n
benford(M_country_total$Nd, number.of.digits = 2)$stats$chisq
benford(M_country_total$Cd, number.of.digits = 1)$stats$chisq
benford(M_country_total$Dd, number.of.digits = 1)$stats$chisq
benford(M_country_total$N, number.of.digits = 1)$stats$chisq
benford(M_country_total$C, number.of.digits = 1)$stats$chisq
benford(M_country_total$D, number.of.digits = 1)$stats$chisq
hist(log10(M_country_total$Nd))
benford(M_country_total$Nd, number.of.digits = 2)$stats$chisq
hist(log10(M_country_total$N))
hist(log10(M_country_total$Cd))
benford(M_country_total$Nd, number.of.digits = 2)$stats$chisq
benford(M_country_total$Cd, number.of.digits = 1)$stats$chisq
benford(M_country_total$Nd, number.of.digits = 1)$stats$chisq
benford(M_country_total$Cd, number.of.digits = 1)$stats$chisq
benford(M_country_total$Dd, number.of.digits = 1)$stats$chisq
benford(M_country_total$N, number.of.digits = 1)$stats$chisq
benford(M_country_total$C, number.of.digits = 1)$stats$chisq
benford(M_country_total$D, number.of.digits = 1)$stats$chisq
# 2. Filtering a country
M_country <- M %>% filter(Country.Region == "China")
# 2.1 Total
M_country_total <- M_country %>%
group_by(date) %>%
summarize(N = sum(N), C = sum(C), D = sum(D),
Nd = sum(Nd), Cd = sum(Cd), Dd = sum(Dd))
M_country_total %>% pivot_longer(2:4, names_to = "Cases", values_to = "Counts") %>%
ggplot(aes(x = date, y = Counts, color = Cases)) + geom_line()
M_country_total %>% pivot_longer(5:7, names_to = "Cases", values_to = "Counts") %>%
ggplot(aes(x = date, y = Counts, color = Cases)) + geom_line()
Ch_n <- benford(M_country_total$Nd, number.of.digits = 1)
Ch_n
plot(Ch_n)
Ch_n <- benford(M_now$Nd, number.of.digits = 1)
plot(Ch_n)
Ch_n
Ch_n <- benford(M_country_total$Nd, number.of.digits = 1)
M_country <- M %>% filter(Country.Region == "Korea, South")
# 2.1 Total
M_country_total <- M_country %>%
group_by(date) %>%
summarize(N = sum(N), C = sum(C), D = sum(D),
Nd = sum(Nd), Cd = sum(Cd), Dd = sum(Dd))
M_country_total %>% pivot_longer(2:4, names_to = "Cases", values_to = "Counts") %>%
ggplot(aes(x = date, y = Counts, color = Cases)) + geom_line()
M_country_total %>% pivot_longer(5:7, names_to = "Cases", values_to = "Counts") %>%
ggplot(aes(x = date, y = Counts, color = Cases)) + geom_line()
Ch_n <- benford(M_country_total$Nd, number.of.digits = 1)
plot(Ch_n)
Ch_n
Ch_n <- benford(M_country_total$Cd, number.of.digits = 1)
plot(Ch_n)
Ch_n
Ch_n <- benford(M_country_total$Cd, number.of.digits = 2)
plot(Ch_n)
Ch_n
Ch_n <- benford(M_now$Nd, number.of.digits = 2)
plot(Ch_n)
Ch_n
Ch_n <- benford(M_now$Nd, number.of.digits = 1)
plot(Ch_n)
Ch_n
setwd("/Users/sungkyu/Dropbox/Website")
a = readLines("newslist.Rmd", n = -1)
n = length(a)
nullid = rep(1,n)
for(i in 1:n){if(identical("", a[i])){nullid[i] = 0}}
a = a[nullid == TRUE]
n = length(a)
k = n
a
a[1]
a[2]
?strsplit
substring(a[2],1,10)
substring(a[2],12)
substring(a[2],13)
aa = matrix(,nrow = k-1,ncol = 2)
for (i in 2:(k-1)){
aa[i-1,1] = substring(a[i],1,10)
aa[i-1,2] = substring(a[i],13)
}
kable(aa)
library(knitr)
kable(aa)
aa = matrix(data =NA,nrow = k-1,ncol = 2)
for (i in 2:(k-1)){
aa[i-1,1] = substring(a[i],1,10)
aa[i-1,2] = substring(a[i],13)
}
library(knitr)
kable(aa)
colnames(aa)
colnames(aa) <- c("Data","Event")
library(knitr)
kable(aa)
install.packages("kableExtra")
kbl(aa) %>%
kable_material(c("striped"), full_width = F)
for (i in (k+1):(n)) {
cat(paste(i-2,". ", sep = "", a[i]))
cat("\n\n")
}
a = readLines("newslist.Rmd", n = -1)
n = length(a)
nullid = rep(1,n)
for(i in 1:n){if(identical("", a[i])){nullid[i] = 0}}
a = a[nullid == TRUE]
n = length(a)
k = n
for(i in 1:n){if(identical("# BadNews", a[i])){k = i;break;}}
#for (i in 2:(k-1)) {
#  cat(paste(i-1,". ", sep = "", a[i]))
#  cat("\n\n")
#}
aa = matrix(data =NA,nrow = k-2,ncol = 2)
for (i in 2:(k-1)){
aa[i-1,1] = substring(a[i],1,10)
aa[i-1,2] = substring(a[i],13)
}
colnames(aa) <- c("Date","Event")
library(knitr)
library(kableExtra)
kbl(aa) %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
#kable_paper(c("striped"), full_width = F)
# kable(aa)
for (i in (k+1):(n)) {
cat(paste(i-2,". ", sep = "", a[i]))
cat("\n\n")
}
aa = matrix(data =NA, nrow = n - k + 1 ,ncol = 2)
for (i in (k+1):(n)){
aa[i-1,1] = substring(a[i],1,10)
aa[i-1,2] = substring(a[i],13)
}
a
k
n
for (i in (k+1):(n)) {
cat(paste(i-2,". ", sep = "", a[i]))
cat("\n\n")
}
aa = matrix(data =NA, nrow = n - k + 1 ,ncol = 2)
for (i in (k+1):(n)){
aa[i-(k+1)+1,1] = substring(a[i],1,10)
aa[i-(k+1)+1,2] = substring(a[i],13)
}
colnames(aa) <- c("Date","Event")
kbl(aa) %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
aa = matrix(data =NA, nrow = n - k ,ncol = 2)
for (i in (k+1):(n)){
aa[i-(k+1)+1,1] = substring(a[i],1,10)
aa[i-(k+1)+1,2] = substring(a[i],13)
}
colnames(aa) <- c("Date","Event")
kbl(aa) %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
install.packages(c("backports", "cli", "colorspace", "cpp11", "globals", "lubridate", "magrittr", "mclust", "pillar", "rbibutils", "RcppArmadillo", "Rdpack", "recipes", "rlang", "rprojroot", "rstudioapi", "vctrs", "waldo"))
install.packages(c("backports", "cli", "colorspace", "cpp11", "globals", "lubridate", "magrittr", "mclust", "pillar", "rbibutils", "RcppArmadillo", "Rdpack", "recipes", "rlang", "rprojroot", "rstudioapi", "vctrs", "waldo"))
library(gcite)
L = gcite_author_info("Sungkyu Jung")
a<-title_cloud(L$paper_df$title)
L = gcite_author_info("Sungkyu Jung")
L = gcite_author_info("Sungkyu Jung")
aa = matrix(data =NA ,nrow = k-2,ncol = 2)
aa[1,1] = "[통계적 추론](https://tv.naver.com/v/20744955)"
aa[1,2] = "[1시간](https://tv.naver.com/v/20745291)"
aa[2,1] = "[데이터 밭에서 바늘 찾기](https://tv.naver.com/v/20937782)"
aa[2,2] = "[1시간](https://tv.naver.com/v/20937833)"
aa[3,1] = "[회귀분석](https://tv.naver.com/v/20653234)  "
aa[3,2] = "[1시간](https://tv.naver.com/v/20653336)"
aa[4,1] = "[확률분포](https://tv.naver.com/v/20502430) "
aa[4,2] = "[1시간](https://tv.naver.com/v/20502460)"
colnames(aa) <- c("키워드","풀간연")
library(knitr)
library(kableExtra)
kbl(aa) %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
#kable_paper(c("striped"), full_width = F)
# kable(aa)
aa = matrix(data =NA ,nrow = 4,ncol = 2)
aa[1,1] = "[통계적 추론](https://tv.naver.com/v/20744955)"
aa[1,2] = "[1시간](https://tv.naver.com/v/20745291)"
aa[2,1] = "[데이터 밭에서 바늘 찾기](https://tv.naver.com/v/20937782)"
aa[2,2] = "[1시간](https://tv.naver.com/v/20937833)"
aa[3,1] = "[회귀분석](https://tv.naver.com/v/20653234)  "
aa[3,2] = "[1시간](https://tv.naver.com/v/20653336)"
aa[4,1] = "[확률분포](https://tv.naver.com/v/20502430) "
aa[4,2] = "[1시간](https://tv.naver.com/v/20502460)"
colnames(aa) <- c("키워드","풀강연")
library(knitr)
library(kableExtra)
kbl(aa) %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
#kable_paper(c("striped"), full_width = F)
# kable(aa)
a = readLines("pubslist.Rmd", n = -1)
a
n = length(a)
n
nullid = rep(1,n)
for(i in 1:n){if(identical("", a[i])){nullid[i] = 0}}
nullid
a = a[nullid == TRUE]
a
n = length(a)
k = n
for(i in 1:n){if(identical("# WorkinProgress", a[i])){k = i;break;}}
k
a = readLines("pubslist.Rmd", n = -1)
n = length(a)
nullid = rep(1,n)
for(i in 1:n){if(identical("", a[i])){nullid[i] = 0}}
a = a[nullid == TRUE]
n = length(a)
k = n
for(i in 1:n){if(identical("# Published", a[i])){k = i;break;}}
for (i in 2:(k-1)) {
cat(paste(i-1,". ", sep = "", a[i]))
cat("\n\n")
}
k
a
n = length(a)
k2 = n
for(i in 1:n){if(identical("# WorkinProgress", a[i])){k2 = i;break;}}
k2
n = length(a)
k2 = n
for(i in 1:n){if(identical("# WorkinProgress", a[i])){k2 = i;break;}}
for (i in 2:(k2-1)) {
cat(paste(i-1,". ", sep = "", a[i]))
cat("\n\n")
}
n = length(a)
k2 = n
for(i in 1:n){if(identical("# WorkinProgress", a[i])){k2 = i;break;}}
for (i in (k+1):(k2-1)) {
cat(paste(i-1,". ", sep = "", a[i]))
cat("\n\n")
}
install.packages("kableExtra")
setwd("~/")
install.packages("kableExtra")
library(synthpop)
?syn
knitr::opts_chunk$set(echo = TRUE, eval = TRUE, fig.width=6, fig.height=4, out.width = "70%", fig.align = "center")
library(tidyverse)
library(nycflights13)
flights %>%
filter(month == 1 & day == 1, abs(dep_delay) > 30) %>%
select(dep_time,arr_time,carrier:dest)
head(airlines,3)
library("nycflights13")
# Drop unimportant variables so it's easier to understand the join results.
flights2 <- flights %>% select(year:day, hour, origin, dest,
tailnum, carrier)
airlines
flights2 %>%
left_join(airlines)
flights2 %>% left_join(planes, by = "tailnum")
qnorm(0.99)
pnorm(1.05)
1
install.packages("usethis")
install.packages("usethis")
usethis::use_git_config()
usethis::use_git_config(user.name = "sungkyujung", user.email = "sungkyu.jung@gmail.com")
install.packages("kableExtra")
install.packages("kableExtra")
install.packages("quantmod")
install.packages("xfun")
install.packages(c("BiocManager", "bit", "bit64", "broom", "car", "cli", "colorspace", "curl", "digest", "e1071", "evaluate", "fastmap", "glue", "jsonlite", "magick", "matlib", "openssl", "randomForest", "raster", "Rcpp", "rlang", "robustbase", "sandwich", "tinytex", "V8", "vcd", "yaml"))
install.packages(c("cli", "digest", "fastmap", "raster", "rlang", "yaml"))
install.packages(c("cli", "digest", "raster"))
warnings()
install.packages("tidyverse")
